// <auto-generated />
using System;
using Classes.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMAPI.Migrations
{
    [DbContext(typeof(BMSDBContext))]
    [Migration("20240527195748_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Classes.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsRemoteAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JobCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinHours")
                        .HasColumnType("int");

                    b.Property<double>("MinSalary")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "You write code...",
                            IsRemoteAvailable = true,
                            JobCreationDate = new DateTime(2024, 5, 27, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9286),
                            MinHours = 4,
                            MinSalary = 1050.5,
                            Title = "Programmer"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cleaning offices and halls",
                            IsRemoteAvailable = false,
                            JobCreationDate = new DateTime(2024, 5, 28, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9319),
                            MinHours = 8,
                            MinSalary = 360.49000000000001,
                            Title = "Janitor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "You do office work for the boss",
                            IsRemoteAvailable = true,
                            JobCreationDate = new DateTime(2024, 5, 31, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9333),
                            MinHours = 6,
                            MinSalary = 639.69000000000005,
                            Title = "Secretary"
                        },
                        new
                        {
                            Id = 4,
                            Description = "You guard all the computers in the office",
                            IsRemoteAvailable = false,
                            JobCreationDate = new DateTime(2024, 5, 22, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9341),
                            MinHours = 8,
                            MinSalary = 1255.55,
                            Title = "Guard"
                        },
                        new
                        {
                            Id = 5,
                            Description = "You are the boss",
                            IsRemoteAvailable = true,
                            JobCreationDate = new DateTime(2023, 11, 9, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9350),
                            MinHours = 4,
                            MinSalary = 4200.6899999999996,
                            Title = "Boss"
                        },
                        new
                        {
                            Id = 6,
                            Description = "You write code... But in the front end",
                            IsRemoteAvailable = true,
                            JobCreationDate = new DateTime(2024, 5, 27, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9361),
                            MinHours = 4,
                            MinSalary = 1050.5,
                            Title = "UI Designer"
                        },
                        new
                        {
                            Id = 7,
                            Description = "You maintain the database",
                            IsRemoteAvailable = true,
                            JobCreationDate = new DateTime(2024, 5, 12, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9369),
                            MinHours = 8,
                            MinSalary = 1050.5,
                            Title = "Database Maintainer"
                        });
                });

            modelBuilder.Entity("Classes.Entities.JoinEntities.WorkJobs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkToJobs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JobId = 1,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 2,
                            JobId = 1,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 3,
                            JobId = 1,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 4,
                            JobId = 2,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 5,
                            JobId = 2,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 6,
                            JobId = 2,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 7,
                            JobId = 3,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 8,
                            JobId = 3,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 9,
                            JobId = 3,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 10,
                            JobId = 4,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 11,
                            JobId = 4,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 12,
                            JobId = 4,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 13,
                            JobId = 5,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 14,
                            JobId = 5,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 15,
                            JobId = 5,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 16,
                            JobId = 6,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 17,
                            JobId = 6,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 18,
                            JobId = 6,
                            WorkId = 3
                        },
                        new
                        {
                            Id = 19,
                            JobId = 7,
                            WorkId = 1
                        },
                        new
                        {
                            Id = 20,
                            JobId = 7,
                            WorkId = 2
                        },
                        new
                        {
                            Id = 21,
                            JobId = 7,
                            WorkId = 3
                        });
                });

            modelBuilder.Entity("Classes.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Sex")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("People", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 43,
                            BirthDate = new DateTime(1981, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "toncho@gmail.com",
                            FName = "Toncho",
                            JobId = 5,
                            LName = "Nikolov",
                            Salary = 1200.0,
                            Sex = "Female",
                            WorkId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 42,
                            BirthDate = new DateTime(1982, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cvety@gmail.com",
                            FName = "Cvetelina",
                            JobId = 5,
                            LName = "Stoilova",
                            Salary = 1200.0,
                            Sex = "Male",
                            WorkId = 3
                        },
                        new
                        {
                            Id = 3,
                            Age = 37,
                            BirthDate = new DateTime(1987, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cvety@gmail.com",
                            FName = "Cvetelina",
                            JobId = 7,
                            LName = "Stoilova",
                            Salary = 1200.0,
                            Sex = "Female",
                            WorkId = 2
                        },
                        new
                        {
                            Id = 4,
                            Age = 27,
                            BirthDate = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elena@gmail.com",
                            FName = "Elena",
                            JobId = 3,
                            LName = "Elenova",
                            Salary = 1200.0,
                            Sex = "Male",
                            WorkId = 3
                        },
                        new
                        {
                            Id = 5,
                            Age = 23,
                            BirthDate = new DateTime(2001, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stefan@gmail.com",
                            FName = "Stefan",
                            JobId = 7,
                            LName = "Stefanov",
                            Salary = 1200.0,
                            Sex = "Female",
                            WorkId = 3
                        },
                        new
                        {
                            Id = 6,
                            Age = 24,
                            BirthDate = new DateTime(2000, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "viktoria@gmail.com",
                            FName = "Viktoria",
                            JobId = 4,
                            LName = "Viktorova",
                            Salary = 1200.0,
                            Sex = "Male",
                            WorkId = 1
                        },
                        new
                        {
                            Id = 7,
                            Age = 25,
                            BirthDate = new DateTime(1999, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elena@gmail.com",
                            FName = "Elena",
                            JobId = 1,
                            LName = "Elenova",
                            Salary = 1200.0,
                            Sex = "Female",
                            WorkId = 2
                        },
                        new
                        {
                            Id = 8,
                            Age = 38,
                            BirthDate = new DateTime(1986, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "georgi@gmail.com",
                            FName = "Georgi",
                            JobId = 4,
                            LName = "Georgiev",
                            Salary = 1200.0,
                            Sex = "Male",
                            WorkId = 3
                        },
                        new
                        {
                            Id = 9,
                            Age = 41,
                            BirthDate = new DateTime(1983, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "toncho@gmail.com",
                            FName = "Toncho",
                            JobId = 6,
                            LName = "Nikolov",
                            Salary = 1200.0,
                            Sex = "Female",
                            WorkId = 1
                        },
                        new
                        {
                            Id = 10,
                            Age = 41,
                            BirthDate = new DateTime(1983, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elena@gmail.com",
                            FName = "Elena",
                            JobId = 4,
                            LName = "Elenova",
                            Salary = 1200.0,
                            Sex = "Male",
                            WorkId = 3
                        });
                });

            modelBuilder.Entity("Classes.Entities.Workplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Holder")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("RatingWithStars")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Workplaces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Plovdiv",
                            DateCreated = new DateTime(2024, 5, 27, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9382),
                            Holder = "Rhody Dervishev",
                            Name = "Sibiz",
                            RatingWithStars = 4.5999999999999996
                        },
                        new
                        {
                            Id = 2,
                            City = "Plovdiv",
                            DateCreated = new DateTime(2024, 5, 27, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9393),
                            Holder = "Ivan Draganov",
                            Name = "Prime Holding",
                            RatingWithStars = 4.0999999999999996
                        },
                        new
                        {
                            Id = 3,
                            City = "Plovdiv",
                            DateCreated = new DateTime(2024, 5, 27, 22, 57, 48, 199, DateTimeKind.Local).AddTicks(9402),
                            Holder = "Petur Arnaudov",
                            Name = "Broadcom",
                            RatingWithStars = 3.7999999999999998
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
