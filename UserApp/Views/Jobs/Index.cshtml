@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IEnumerable<DataTransferObjects.DTOs.Job>

@{
    ViewData["Title"] = "Jobs";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Create A New Job</a>
</p>
<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="Index">
            <input name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search" />
            @Html.DropDownList("searchby", (IEnumerable<SelectListItem>)ViewData["datalist"], new { @class = "form-control" })
            <button class="btn btn-dark" type="submit">Search</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="Index" class="text-dark">Clear Search</a>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MinSalary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MinHours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsRemoteAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobCreationDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinSalary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRemoteAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobCreationDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
    {
        page = page,
        searchfor = Context.Request.Query["searchfor"],
        searchby = @Context.Request.Query["searchby"]
    }),
    new PagedListRenderOptions { LiElementClasses = new string[] { "page-item" }, PageClasses = new string[] { "page-link" } })